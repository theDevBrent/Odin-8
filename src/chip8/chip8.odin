package chip8

import "core:fmt"

Chip8 :: struct {
	memory:    Memory,
	stack:     Stack,
	registers: Registers,
	keyboard:  Keyboard,
	screen:    Screen,
}

init :: proc(chip8: ^Chip8) {
	load_character_set(chip8)
}


load_character_set :: proc(chip8: ^Chip8) {
	fmt.println("Loading character set...")
	fmt.printf("Character set length: %d\n", len(default_character_set))
	if len(default_character_set) == 0 {
		fmt.println("ERROR: Character set is empty!")
	}
	// load default character set into memory
	for i := 0; i < len(default_character_set); i += 1 {
		value := default_character_set[i]
		memory_set(&chip8.memory, i, value)
		if i < 5 {
			fmt.printf("Wrote 0x%02x to memory[%d]\n", value, i)
		}
	}
}


default_character_set := []u8 {
	0xf0,
	0x90,
	0x90,
	0x90,
	0xf0, // 0
	0x20,
	0x60,
	0x20,
	0x20,
	0x70, // 1
	0xf0,
	0x10,
	0xf0,
	0x80,
	0xf0, // 2
	0xf0,
	0x10,
	0xf0,
	0xf0,
	0xf0, // 3
	0x90,
	0x90,
	0xf0,
	0x10,
	0x10, // 4
	0xf0,
	0x80,
	0xf0,
	0x10,
	0xf0, // 5
	0xf0,
	0x80,
	0xf0,
	0x90,
	0xf0, // 6
	0xf0,
	0x10,
	0x20,
	0x40,
	0x40, // 7
	0xf0,
	0x90,
	0xf0,
	0x90,
	0xf0, // 8
	0xf0,
	0x90,
	0xf0,
	0x10,
	0xf0, // 9
	0xf0,
	0x90,
	0xf0,
	0x90,
	0x90, // a
	0xf0,
	0x90,
	0xe0,
	0x90,
	0xe0, // b
	0xf0,
	0x80,
	0x80,
	0x80,
	0xf0, // c
	0xe0,
	0x90,
	0x90,
	0x90,
	0xe0, // d
	0xf0,
	0x80,
	0xf0,
	0x80,
	0xf0, // e
	0xf0,
	0x80,
	0xf0,
	0x80,
	0x80, // f
}
